name: ðŸš€ Terraform - Windows Deployment

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/windows/**'
  push:
    branches: [ main ]
    paths:
      - 'terraform/windows/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  GCP_PROJECT_ID: root-cortex-465610-p8
  TF_VAR_project_id: root-cortex-465610-p8

jobs:
  terraform-plan:
    name: ðŸ“‹ Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/windows
    outputs:
      plan-exitcode: ${{ steps.plan.outputs.exitcode }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.6.0

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -detailed-exitcode -no-color -out=tfplan
          echo "exitcode=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Update Pull Request with Plan
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### ðŸªŸ Terraform Windows Plan ðŸ“– \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  terraform-apply:
    name: ðŸš€ Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    # Only apply on merge to main or when triggered by Packer
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply')
    defaults:
      run:
        working-directory: terraform/windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          echo "ðŸš€ Applying Terraform configuration..."
          echo "Using latest image from family"
          terraform apply -auto-approve

      - name: Output Instance Details
        run: |
          echo "ðŸŽ‰ Windows VM deployed successfully!"
          echo "Instance IP: $(terraform output -raw windows_instance_ip)"
          echo "Instance URL: $(terraform output -raw windows_instance_url)"
          echo "RDP: $(terraform output -raw windows_rdp_command)"

  terraform-destroy:
    name: ðŸ’¥ Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    defaults:
      run:
        working-directory: terraform/windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: |
          echo "ðŸ’¥ Destroying Terraform resources..."
          terraform destroy -auto-approve
          echo "âœ… Resources destroyed"
